user www-data;
worker_processes auto;

pid /var/run/nginx.pid;

events {
    worker_connections 8000;
}

http {
    upstream app {
        server app:3000;
    }

    # Server
    server {
        listen 80;

        # Proxy
        proxy_intercept_errors on;

        # Status
        location ~/_/status {
            stub_status on;
            access_log off;
        }

        # Default
        location / {
            try_files @handle_404 @handle_404;
        }

        # 404
        location @handle_404 {
            add_header X-Cache-Status $upstream_cache_status always;

            return 404;
        }

        # Swift
        # = 4+ paths
        # => foo1/bar2/baz3/55/poster/myfav22/image.png -> foo1-bar2-baz3/55/poster/myfav22/image.png
        # => foo1/bar2/baz3/55/image.png -> foo1-bar2-baz3/55/image.png
        # = 3 paths
        # => foo1/bar2/baz3/image.png -> foo1-bar2-baz3/image.png
        # = 2 paths
        # => foo1/bar2/image.png -> foo1-bar2/image.png
        # = 1 path
        # => foo1/image.png -> foo1/image.png
        # = 0 paths
        # => image.png -> image.png
        location ~ ^/(.+) {
            # Match 4+ path segments
            rewrite ^/([^/]+)/([^/]+)/([^/]+)/([^/]+)/(.*)$ /v1/AUTH_myaccount/$1-$2-$3/$4/$5 break;

            # Match exactly 3 path segments
            rewrite ^/([^/]+)/([^/]+)/([^/]+)/([^/]+)$ /v1/AUTH_myaccount/$1-$2-$3/$4 break;

            # Match exactly 2 path segments
            rewrite ^/([^/]+)/([^/]+)/([^/]+)$ /v1/AUTH_myaccount/$1-$2/$3 break;

            # Match 1 or 0 path segments
            rewrite ^/(.*)$ /v1/AUTH_myaccount/$1 break;

            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # File not found
            error_page 404 = @handle_404;
        }
    }
}
