version: '3.8'

x-shared: &shared
  restart: unless-stopped
  image: n8nio/n8n:1.107.4
  environment:
    - DB_POSTGRESDB_DATABASE=n8n
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PASSWORD=n8n
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_USER=n8n
    - DB_TYPE=postgresdb
    - EXECUTIONS_MODE=queue
    - N8N_ENCRYPTION_KEY=s2uwUFAp7uMnQ00C37zRQX5qqgt1cezUiJq6xW8g3Azo9pTpdr
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    - N8N_HIRING_BANNER_ENABLED=false
    - N8N_RUNNERS_AUTH_TOKEN=DTdoPemZLxK9PYVfTfMEFeqBz5uA8vWCtA3uNQymCnphz5kwiv
    - N8N_RUNNERS_BROKER_LISTEN_ADDRESS=0.0.0.0
    - N8N_RUNNERS_ENABLED=true
    - N8N_RUNNERS_MODE=external
    - N8N_SECURE_COOKIE=false
    - N8N_TEMPLATES_ENABLED=true
    - N8N_BASIC_AUTH_ACTIVE=false
    - NODE_FUNCTION_ALLOW_BUILTIN=*
    - NODE_FUNCTION_ALLOW_EXTERNAL=moment,lodash,cheerio
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - WEBHOOK_URL=http://0.0.0.0:5678
    - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
  links:
    - postgres
    - redis
  volumes:
    - .docker/n8n:/home/node/.n8n
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  n8n:
    <<: *shared
    ports:
      - 5678:5678

  n8n-worker:
    <<: *shared
    command: worker
    depends_on:
      - n8n

  postgres:
    image: postgres:16
    restart: unless-stopped
    ports:
      - 5433:5432
    environment:
      POSTGRES_PASSWORD: n8n
      POSTGRES_USER: n8n
      POSTGRES_DB: n8n
    volumes:
      - .docker/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U n8n -d n8n']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    ports:
      - 6380:6380
    volumes:
      - .docker/redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - .docker/qdrant:/qdrant/storage
    healthcheck:
      test: bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: dockette/adminer:latest
    restart: unless-stopped
    ports:
      - 8000:80
